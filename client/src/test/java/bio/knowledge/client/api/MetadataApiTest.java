/*
 * Translator Knowledge Beacon Aggregator API
 * This is the Translator Knowledge Beacon Aggregator web service application programming interface (API) that provides integrated access to a pool of knowledge sources publishing concepts and relations through the Translator Knowledge Beacon API. This API is similar to that of the latter mentioned API with the addition of some extra informative endpoints plus session identifier and beacon indices. These latter identifiers are locally assigned numeric indices provided to track the use of specific registered beacons within the aggregator API itself. 
 *
 * OpenAPI spec version: 1.1.1
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.api;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Test;

import com.squareup.okhttp.OkHttpClient;

import bio.knowledge.client.ApiClient;
import bio.knowledge.client.ApiException;
import bio.knowledge.client.model.BeaconConceptCategory;
import bio.knowledge.client.model.BeaconKnowledgeBeacon;
import bio.knowledge.client.model.BeaconKnowledgeMap;
import bio.knowledge.client.model.BeaconLogEntry;
import bio.knowledge.client.model.BeaconPredicate;

/**
 * API tests for MetadataApi
 */
//@Ignore
public class MetadataApiTest {
	
	private static ApiClient apiClient = new ApiClient();
    private static MetadataApi api = new MetadataApi();
    
	@BeforeClass
	public static void setup() {
		// Adjust ApiClient read timeout
		OkHttpClient httpClient = apiClient.getHttpClient();
		httpClient.setReadTimeout( 5, TimeUnit.MINUTES );
		api = new MetadataApi(apiClient);
	}

    /**
     * 
     *
     * Get a list of all of the knowledge beacons that the aggregator can query 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getBeaconsTest() throws ApiException {
    	System.err.println("\n######### Running getBeaconsTest #########\n");
        List<BeaconKnowledgeBeacon> response = api.getBeacons();
        for(BeaconKnowledgeBeacon beacon : response) {
        	System.err.println(beacon.toString());
        }
    }
    
    /**
     * 
     *
     * Get a list of semantic categories and number of instances in each  available knowledge beacon, including associated beacon-specific metadata 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConceptCategoriesTest() throws ApiException {
    	System.err.println("\n######### Running getConceptCategoriesTest #########\n");
        List<Integer> beacons = null;
        List<BeaconConceptCategory> response = api.getConceptCategories(beacons);
        for(BeaconConceptCategory category : response) {
        	System.err.println(category.toString());
        }
    }
    
    /**
     * 
     *
     * Get a log of the system errors associated with a specified query 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Ignore @Test
    public void getErrorsTest() throws ApiException {
    	System.err.println("\n######### Running getErrorsTest #########\n");
        String queryId = null;
        List<BeaconLogEntry> response = api.getErrors(queryId);
        for(BeaconLogEntry error : response) {
        	System.err.println(error.toString());
        }
    }
    
    /**
     * 
     *
     * Get a high level knowledge map of the all the beacons specified by triplets of subject concept category, relationship predicate and concept object category 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKnowledgeMapTest() throws ApiException {
    	System.err.println("\n######### Running getKnowledgeMapTest #########\n");
        List<Integer> beacons = null;
        try {
	        List<BeaconKnowledgeMap> response = api.getKnowledgeMap(beacons);
	        for(BeaconKnowledgeMap kmap : response) {
	        	System.err.println(kmap.toString());
	        }
        } catch (ApiException ae) {
        	System.err.println(ae.getMessage());
        	ae.printStackTrace();
        }
    }
    
    /**
     * 
     *
     * Get a list of predicates used in statements issued by the knowledge source 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPredicatesTest() throws ApiException {
    	System.err.println("\n######### Running getPredicatesTest #########\n");
        List<Integer> beacons = null;
        List<BeaconPredicate> response = api.getPredicates(beacons);
        for(BeaconPredicate predicate : response) {
        	System.err.println(predicate.toString());
        }
    }
    
}
