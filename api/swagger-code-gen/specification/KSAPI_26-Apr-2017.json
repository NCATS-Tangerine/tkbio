{
  "swagger": "2.0",
  "info": {
    "title": "Translator Knowledge Beacon API",
    "version": "4.0.6",
    "contact": {
      "responsibleDeveloper": "Richard Bruskiewich",
      "responsibleOrganization": "STAR Informatics/Delphinai Corporation",
      "url": "http://starinformatics.com",
      "email": "richard@starinformatics.com"
    },
    "description": "This is the Translator Knowledge Beacon web service application programming interface (API).  This OpenAPI (\"Swagger\") document may be used as the input specification into a tool like [Swagger-Codegen](https://github.com/swagger-api/swagger-codegen/blob/master/README.md) to generate client and server code stubs implementing the API, in any one of several supported computer languages and frameworks. In order to customize usage to your web site, you should change the 'host' directive below to your hostname.  Note that where the term 'local' is used below to describe an identifier or other resource, it is referring to the specific Knowledge Source (KS) upon which the Knowledge Beacon API is hosted.\n"
  },
  "host": "api.knowledge.bio",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "concepts",
      "description": "Queries for concepts"
    },
    {
      "name": "exactmatches",
      "description": "Queries for exactly matching concepts sensa SKOS; http://www.w3.org/2004/02/skos/core#exactMatch"
    },
    {
      "name": "statements",
      "description": "Queries for concept-relationship statements"
    },
    {
      "name": "evidence",
      "description": "Queries for references cited as evidence for statements"
    }
  ],
  "paths": {
    "/concepts/{conceptId}": {
      "get": {
        "description": "Retrieves details for a specified concepts in the system, as specified by a local (simple, non-qualified) object identifier.\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "conceptId",
            "in": "path",
            "description": "local object identifier of concept of interest",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "getConceptDetails",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "local object identifier for the concept in the specified knowledge\nsource database\n"
                  },
                  "name": {
                    "type": "string",
                    "description": "canonical human readable name of the concept\n"
                  },
                  "semanticGroup": {
                    "type": "string",
                    "description": "concept semantic type\n"
                  },
                  "synonyms": {
                    "type": "array",
                    "description": "list of synonyms for concept\n",
                    "items": {
                      "type": "string"
                    }
                  },
                  "definition": {
                    "type": "string",
                    "description": "concept definition\n"
                  },
                  "details": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "type": "string",
                          "description": "property name\n"
                        },
                        "value": {
                          "type": "string",
                          "description": "property value\n"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with concept details returned\n",
            "examples": {
              "application/json": [
                {
                  "id": "wd:Q14883734",
                  "name": "WRN",
                  "semanticGroup": "GENE",
                  "synonyms": [],
                  "definition": "Werner Syndrome Gene",
                  "details": []
                }
              ]
            }
          }
        }
      }
    },
    "/concepts": {
      "get": {
        "description": "Retrieves a (paged) list of concepts in the system\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "a (urlencoded) space delimited set of keywords or substrings against which to match concept names and synonyms",
            "required": true,
            "type": "string"
          },
          {
            "name": "sg",
            "in": "query",
            "description": "a (urlencoded) space-delimited set of semantic groups (specified as codes CHEM, GENE, ANAT, etc.) to which to constrain concepts matched by the main keyword search (see [SemGroups](https://metamap.nlm.nih.gov/Docs/SemGroups_2013.txt) for the full list of codes)\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "(1-based) number of the page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "number of concepts per page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          }
        ],
        "operationId": "getConcepts",
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "semanticGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pageNumber": {
                  "type": "integer"
                },
                "pageSize": {
                  "type": "integer"
                },
                "totalEntries": {
                  "type": "integer"
                },
                "dataPage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "local object identifier for the concept in the specified knowledge\nsource database\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "canonical human readable name of the concept\n"
                      },
                      "semanticGroup": {
                        "type": "string",
                        "description": "concept semantic type\n"
                      },
                      "synonyms": {
                        "type": "array",
                        "description": "list of synonyms for concept\n",
                        "items": {
                          "type": "string"
                        }
                      },
                      "definition": {
                        "type": "string",
                        "description": "concept definition\n"
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with concept list returned\n",
            "examples": {
              "application/json": {
                "keywords": [
                  "Diabetes"
                ],
                "semanticGroups": [
                  null
                ],
                "pageNumber": 3,
                "pageSize": 5,
                "totalEntries": 20,
                "datapage": [
                  {
                    "id": "wd:Q2898645",
                    "name": "Neonatal diabetes mellitus",
                    "semanticGroup": "DISO",
                    "synonyms": [],
                    "definition": "Neonatal diabetes mellitus"
                  },
                  {
                    "id": "wd:Q631361",
                    "name": "Diabetic Retinopathy",
                    "semanticGroup": "DISO",
                    "synonyms": [],
                    "definition": "diabetic eye disease when damage occurs to the retina due to diabetes."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/exactmatches/{conceptId}": {
      "get": {
        "description": "Retrieves a list of qualified identifiers of \"exact match\" concepts, [sensa SKOS](http://www.w3.org/2004/02/skos/core#exactMatch) associated with an specified local concept object identifier, typically, of a concept selected from the list of concepts originally returned by a /concepts API call on a given KS. This API call should generally only be run against the same KS (only) from which the originally selected concept was retrieved.\n",
        "tags": [
          "exactmatches"
        ],
        "parameters": [
          {
            "name": "conceptId",
            "in": "path",
            "description": "local object identifier of the concept to be matched",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "getExactMatchesToConcept",
        "responses": {
          "200": {
            "description": "Successful response returns a list of [CURIE](https://www.w3.org/TR/curie/) identifiers to 3rd party concepts defined outside of the local KS, which are deemed semantic exact matches to  the specified identified concept (maybe an empty list?)\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "application/json": [
                "wd:Q12345 mon:67890"
              ]
            }
          }
        }
      }
    },
    "/exactMatches": {
      "get": {
        "description": "Given an input list of [CURIE](https://www.w3.org/TR/curie/) identifiers of known exactly matched concepts [sensa SKOS](http://www.w3.org/2004/02/skos/core#exactMatch), retrieves the list of (CURIE)[https://www.w3.org/TR/curie/] identifiers of additional concepts that are deemed to be exact matches to one or more of the input concepts. This new list of concept identifiers is returned with the full list of any additional identifiers deemed by the KS to also be identifying exactly matched concepts.\n",
        "tags": [
          "exactmatches"
        ],
        "parameters": [
          {
            "name": "emci",
            "in": "query",
            "description": "a (urlencoded) space-delimited set of [CURIE-encoded](https://www.w3.org/TR/curie/) identifiers of exactly matching concepts, to be used in a search for additional exactly matching concepts\n",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "getExactMatchesToConceptList",
        "responses": {
          "200": {
            "description": "Successful response returns a list of [CURIE-encoded](https://www.w3.org/TR/curie/)  identifiers of concepts (with supporting evidence code and reference) matching at least one identifier in the input list of known exactly matched concepts [sensa SKOS](http://www.w3.org/2004/02/skos/core#exactMatch). Each concept identifier is returned with  the full list of any additional associated [CURIE-encoded](https://www.w3.org/TR/curie/) identifiers known to the local Knowledge Source.\n",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "exactMatches": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "[CURIE](https://www.w3.org/TR/curie/) identifier of asserted exact matching concept\n"
                        },
                        "evidenceCode": {
                          "type": "string",
                          "description": "identifier of [GENE Ontology Evidence Codes](http://geneontology.org/page/guide-go-evidence-codes)\n"
                        },
                        "reference": {
                          "type": "string",
                          "description": "[CURIE](https://www.w3.org/TR/curie/) identifier of supporting reference\n"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "wd:Q12345",
                  "exactMatches": [
                    {
                      "id": [
                        "mon:67890"
                      ],
                      "evidenceCode": "EXP",
                      "reference": [
                        "pmid:1234"
                      ]
                    }
                  ]
                },
                {
                  "id": "mon:67890",
                  "exactMatches": [
                    {
                      "id": [
                        "wd:Q12345"
                      ],
                      "evidenceCode": "IAP",
                      "reference": [
                        "pmid:5678"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "/statements": {
      "get": {
        "description": "Given a list of [CURIE-encoded](https://www.w3.org/TR/curie/) identifiers of exactly matching concepts, retrieves a paged list of concept-relations where either the subject or object concept matches at least one concept in the input list\n",
        "tags": [
          "statements"
        ],
        "parameters": [
          {
            "name": "emci",
            "in": "query",
            "description": "a (urlencoded) space-delimited set of [CURIE-encoded](https://www.w3.org/TR/curie/) identifiers of exactly matching concepts to be used in a search for associated concept-relation statements\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "(1-based) number of the page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "number of concepts per page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "a (urlencoded) space delimited set of keywords or substrings against which to apply against the subject, predicate or object names of the set of concept-relations matched by any of the input exact matching concepts\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "semgroups",
            "in": "query",
            "description": "a (urlencoded) space-delimited set of semantic groups (specified as codes CHEM, GENE, ANAT, etc.) to which to constrain the subject or object concepts associated with the query seed concept (see [SemGroups](https://metamap.nlm.nih.gov/Docs/SemGroups_2013.txt) for the full list of codes)\n",
            "required": false,
            "type": "string"
          }
        ],
        "operationId": "getStatements",
        "responses": {
          "200": {
            "description": "Successful response returns a list of concept-relations with one or more subject or object matches to input concept identifiers\n",
            "schema": {
              "type": "object",
              "properties": {
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "semanticGroups": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pageNumber": {
                  "type": "integer"
                },
                "pageSize": {
                  "type": "integer"
                },
                "totalEntries": {
                  "type": "integer"
                },
                "dataPage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "local statement identifiers"
                      },
                      "subject": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "CURIE-encoded identifier\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "human readable label of concept"
                          }
                        }
                      },
                      "predicate": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "CURIE-encoded identifier\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "human readable label of concept"
                          }
                        }
                      },
                      "object": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "description": "CURIE-encoded identifier\n",
                          "name": {
                            "type": "string",
                            "description": "human readable label of concept"
                          }
                        }
                      },
                      "evidence": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "local identifier to evidence record"
                          },
                          "count": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "keywords": [
                  "Neonatal"
                ],
                "semanticGroups": [
                  "GENE"
                ],
                "pageNumber": 2,
                "pageSize": 25,
                "totalEntries": 120,
                "datapage": [
                  {
                    "source": "semmeddb",
                    "id": 12345,
                    "subject": {
                      "id": [
                        "wd:Q14912054"
                      ],
                      "name": "KCNJ11"
                    },
                    "predicate": {
                      "id": [
                        "kbp:10"
                      ],
                      "name": "Causes"
                    },
                    "object": {
                      "id": [
                        "wd:Q2898645"
                      ],
                      "name": "Neonatal diabetes mellitus"
                    },
                    "evidence": {
                      "id": 67890,
                      "count": 10
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/evidence/{evidenceId}": {
      "get": {
        "description": "Retrieves a (paged) list of references cited as evidence for a specified statement\n",
        "tags": [
          "evidence"
        ],
        "parameters": [
          {
            "name": "evidenceId",
            "in": "path",
            "description": "local identifier of evidence subset, of cited references supporting a given concept-relationship statement\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "keyword filter to apply against the citation titles of references related to the evidence supporting given concept-relationship statement\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "(1-based) number of the page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "number of cited references per page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          }
        ],
        "operationId": "getEvidence",
        "responses": {
          "200": {
            "description": "successful call returns a [CURIE-encoded](https://www.w3.org/TR/curie/) list of cited references\n",
            "schema": {
              "type": "object",
              "properties": {
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pageNumber": {
                  "type": "integer"
                },
                "pageSize": {
                  "type": "integer"
                },
                "totalEntries": {
                  "type": "integer"
                },
                "dataPage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "CURIE-encoded identifier for the cited reference\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "canonical human readable title of the cited reference\n"
                      },
                      "publicationDate": {
                        "type": "string",
                        "description": "publication date of reference (yyyy-mm-dd)\n"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "keywords": [
                "hernia"
              ],
              "pageNumber": 1,
              "pageSize": 5,
              "totalEntries": 14,
              "dataPage": [
                {
                  "id": [
                    "pmid:22781086"
                  ],
                  "name": "Neonatal diabetes mellitus and congenital diaphragmatic hernia coincidence or concurrent etiology?",
                  "publicationDate": "212-07-10"
                }
              ]
            }
          }
        }
      }
    }
  }
}