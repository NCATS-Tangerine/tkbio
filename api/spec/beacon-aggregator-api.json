{
  "swagger": "2.0",
  "info": {
    "title": "Translator Knowledge Beacon Aggregator API",
    "version": "1.0.10",
    "contact": {
      "url": "http://starinformatics.com",
      "email": "richard@starinformatics.com"
    },
    "description": "This is the Translator Knowledge Beacon Aggregator web service application programming interface (API) that provides integrated access to a pool of knowledge sources publishing concepts and relations through the Translator Knowledge Beacon API. This API is similar to that of the latter mentioned API with the addition of some extra informative endpoints plus session identifier and beacon indices. These latter identifiers are locally assigned numeric indices provided to track the use of specific registered beacons within the aggregator API itself.\n",
    "license": {
      "name": "MIT License",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "host": "kba.ncats.io",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "metadata",
      "description": "Queries about global characteristics of the knowledge beacon network"
    },
    {
      "name": "concepts",
      "description": "Queries relating to concepts"
    },
    {
      "name": "statements",
      "description": "Queries relating to concept-relationship statements and their evidence"
    }
  ],
  "paths": {
    "/beacons": {
      "get": {
        "description": "Get a list of all of the knowledge beacons that the aggregator can query\n",
        "tags": [
          "metadata"
        ],
        "operationId": "getBeacons",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "title": "BeaconKnowledgeBeacon",
                "type": "object",
                "properties": {
                  "beacon": {
                    "type": "integer",
                    "description": "aggregator assigned beacon index identifier\n"
                  },
                  "name": {
                    "type": "string",
                    "description": "beacon name\n"
                  },
                  "url": {
                    "type": "string",
                    "description": "URL used to execute API calls on the beacon\n"
                  },
                  "description": {
                    "type": "string",
                    "description": "beacon description\n"
                  },
                  "contact": {
                    "type": "string",
                    "description": "name of the person responsible for this beacon\n"
                  },
                  "wraps": {
                    "type": "string",
                    "description": "URL of this beacon's data source\n"
                  },
                  "repo": {
                    "type": "string",
                    "description": "URL of this beacon's repository\n"
                  }
                }
              }
            },
            "description": "Successful response with beacons\n",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "SemMedDB",
                  "url": "https://rkb.ncats.io",
                  "description": "Reference Knowledge Beacon implementation indexed by Wikidata\n"
                }
              ]
            }
          }
        }
      }
    },
    "/types": {
      "get": {
        "description": "Get a list of types and number of instances in the knowledge source, and a link to the API call for the list of equivalent terminology\n",
        "tags": [
          "metadata"
        ],
        "parameters": [
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons to constrain types returned\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getConceptTypes",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "title": "BeaconConceptTypes",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "the CURIE of the concept type (see [Biolink Model](https://biolink.github.io/biolink-model)"
                  },
                  "iri": {
                    "type": "string",
                    "description": "the IRI of the concept type (see [Biolink Model](https://biolink.github.io/biolink-model) for the full list of IRI)"
                  },
                  "label": {
                    "type": "string",
                    "description": "the human readable label of the concept type (see [Biolink Model](https://biolink.github.io/biolink-model) for the full list of concept type names)\n"
                  },
                  "description": {
                    "type": "string",
                    "description": "human readable definition assigned by the beacon for the specified concept type\n"
                  },
                  "beacons": {
                    "type": "array",
                    "description": "list of metadata for beacons that support the use of this concept type\n",
                    "items": {
                      "title": "BeaconConceptTypesByBeacon",
                      "type": "object",
                      "properties": {
                        "beacon": {
                          "type": "integer",
                          "description": "aggregator index identifier of the given beacon\n"
                        },
                        "types": {
                          "type": "array",
                          "items": {
                            "title": "BeaconBeaconConceptType",
                            "type": "object",
                            "description": "Single local concept type term from a given beacon\n",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "the 'local' CURIE-encoded identifier of the given concept type, as published by the given beacon\n"
                              },
                              "iri": {
                                "type": "string",
                                "description": "the 'local' IRI of the given concept type, as published by the given beacon\n"
                              },
                              "label": {
                                "type": "string",
                                "description": "the 'local' human readable of the given concept type, as published by the given beacon\n"
                              },
                              "frequency": {
                                "type": "integer",
                                "description": "the number of instances of the specified concept type is used in statements within the given beacon\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with types and frequency returned\n",
            "examples": {
              "application/json": [
                {
                  "id": "BLM:Gene",
                  "iri": "http://bioentity.io/vocab/Gene",
                  "label": "gene",
                  "description": "A region (or regions) that includes all of the sequence elements necessary to encode a functional transcript. A gene may include regulatory regions, transcribed regions and/or other functional sequence regions.\n",
                  "beacons": [
                    {
                      "beacon": 1,
                      "types": [
                        {
                          "id": "UMLSSG:GENE",
                          "iri": "https://metamap.nlm.nih.gov/Docs/SemGroups_2013#GENE",
                          "label": "GENE"
                        }
                      ],
                      "frequency": 1234
                    },
                    {
                      "beacon": 5,
                      "types": [
                        {
                          "id": "SO:0000704",
                          "iri": "http://www.sequenceontology.org/0000704",
                          "label": "gene",
                          "frequency": 5678
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "/predicates": {
      "get": {
        "description": "Get a list of predicates used in statements issued by the knowledge source\n",
        "tags": [
          "metadata"
        ],
        "parameters": [
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons to constrain predicates returned\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getPredicates",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "title": "BeaconPredicates",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "the CURIE of the predicate relation (see [Biolink Model](https://biolink.github.io/biolink-model)"
                  },
                  "iri": {
                    "type": "string",
                    "description": "the IRI of the predicate relation (see [Biolink Model](https://biolink.github.io/biolink-model) for the full list of IRI)"
                  },
                  "label": {
                    "type": "string",
                    "description": "the human readable label of the prediccate relation (see [Biolink Model](https://biolink.github.io/biolink-model) for the full list of predicates)"
                  },
                  "description": {
                    "type": "string",
                    "description": "human readable definition assigned by the beacon for the predicate relation\n"
                  },
                  "beacons": {
                    "type": "array",
                    "description": "list of metadata for beacons that support the use of this predicate relation\n",
                    "items": {
                      "title": "BeaconPredicatesByBeacon",
                      "type": "object",
                      "properties": {
                        "beacon": {
                          "type": "integer",
                          "description": "aggregator index of the given beacon\n"
                        },
                        "predicates": {
                          "type": "array",
                          "items": {
                            "title": "BeaconBeaconPredicate",
                            "type": "object",
                            "description": "Single local predicate term from a given beacon\n",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "the 'local' CURIE-encoded identifier of the given predicate, as published by the given beacon\n"
                              },
                              "iri": {
                                "type": "string",
                                "description": "the 'local' CURIE-encoded identifier of the given predicate, as published by the given beacon\n"
                              },
                              "label": {
                                "type": "string",
                                "description": "the 'local' human readable of the given predicate, as published by the given beacon\n"
                              },
                              "frequency": {
                                "type": "integer",
                                "description": "the number of instances of the specified predicate relation is used in statements within the given beacon\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with predicates with CURIE and definitions indexed by beacons which support the relation\n",
            "examples": {
              "application/json": [
                {
                  "id": "BLM:GeneToDiseaseAssociation",
                  "iri": "http://bioentity.io/vocab/GeneToDiseaseAssociation",
                  "label": "gene to disease association",
                  "description": "gene in which variation is correlated with the disease - \nmay be protective or causative or associative, or as a model\n",
                  "beacons": [
                    {
                      "beacon": 5,
                      "predicates": [
                        {
                          "id": "RO:0003302",
                          "iri": "http://purl.obolibrary.org/obo/RO_0003302",
                          "label": "causes or contributes to condition",
                          "frequency": 123
                        }
                      ]
                    },
                    {
                      "beacon": 2,
                      "predicates": [
                        {
                          "id": "SIO:000983",
                          "iri": "http://semanticscience.org/resource/SIO_000983",
                          "label": "gene-disease association",
                          "frequency": 321
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "/kmap": {
      "get": {
        "description": "Get a high level knowledge map of the all the beacons specified by triplets of subject concept type, relationship predicate and concept object type\n",
        "tags": [
          "metadata"
        ],
        "parameters": [
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons constraining knowledge maps returned \n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getKnowledgeMap",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "title": "BeaconKnowledgeMap",
                "type": "object",
                "properties": {
                  "beacon": {
                    "type": "integer",
                    "description": "aggregator assigned beacon index identifier\n"
                  },
                  "statements": {
                    "type": "array",
                    "items": {
                      "title": "BeaconKnowledgeMapStatement",
                      "type": "object",
                      "properties": {
                        "subject": {
                          "title": "BeaconKnowledgeMapSubject",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "the CURIE designating the concept type of a \nstatement subject\n"
                            },
                            "label": {
                              "type": "string",
                              "description": "the human readable label of the concept type of a\nstatement subject\n"
                            },
                            "prefixes": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "the prefix of the namespace of statement subject concept identifiers which may conceivably be bound to the given relationship\n"
                              }
                            }
                          }
                        },
                        "predicate": {
                          "title": "BeaconKnowledgeMapPredicate",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "the CURIE of the predicate of the given relationship"
                            },
                            "label": {
                              "type": "string",
                              "description": "the human readable label of the  predicate ofthe given relationship"
                            }
                          }
                        },
                        "object": {
                          "title": "BeaconKnowledgeMapObject",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "the CURIE designating the concept type of a \nstatement object\n"
                            },
                            "label": {
                              "type": "string",
                              "description": "the human readable label of the concept type of a\nstatement object\n"
                            },
                            "prefixes": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "the prefix of the namespace of statement object concept identifiers which may conceivably be bound to the given relationship\n"
                              }
                            }
                          }
                        },
                        "frequency": {
                          "type": "integer",
                          "description": "the frequency of statements of the specified relationship within the given beacon\n"
                        },
                        "description": {
                          "type": "string",
                          "description": "a description of the nature of the relationship\n"
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with types and frequency returned\n",
            "examples": {
              "application/json": [
                {
                  "beacon": 1,
                  "statements": [
                    {
                      "subject": {
                        "id": "BLM:Gene",
                        "label": "gene",
                        "prefixes": [
                          "DRUGBANK",
                          "CHEMBL",
                          "UNIPROT"
                        ]
                      },
                      "predicate": {
                        "id": "RO:0002606",
                        "label": "is substance that treats"
                      },
                      "object": {
                        "id": "BLM:DiseaseOrPhenotypicFeature",
                        "label": "disease or phenotypic feature",
                        "prefixes": [
                          "MP",
                          "HP",
                          "DOID"
                        ]
                      },
                      "count": 500,
                      "description": "a small molecule or compound that is capable of some activity that negative regulates or decreases the magnitude of a pathological process, phenotype or disease\n"
                    },
                    {
                      "subject": {
                        "id": "BLM:Drug",
                        "label": "drug",
                        "prefixes": [
                          "DRUGBANK",
                          "CHEMBL"
                        ]
                      },
                      "predicate": {
                        "id": "SIO:001250",
                        "label": "chemical to pathway association"
                      },
                      "object": {
                        "id": "BLM:Pathway",
                        "label": "pathway",
                        "prefixes": [
                          "KEGG"
                        ]
                      },
                      "count": 100,
                      "description": "Drug interacts with a given protein\n"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "/errorlog": {
      "get": {
        "description": "Get a log of the system errors associated with a specified query\n",
        "tags": [
          "metadata"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "query",
            "description": "query identifier returned from a POSTed query\n",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "getErrors",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "title": "BeaconLogEntry",
                "type": "object",
                "properties": {
                  "queryId": {
                    "type": "string",
                    "description": "session identifier of initiated query\n"
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "timestamp\n"
                  },
                  "beacon": {
                    "type": "integer",
                    "description": "aggregator assigned beacon index identifier\n"
                  },
                  "query": {
                    "type": "string",
                    "description": "URL of the API call executed by the aggregator\n"
                  },
                  "message": {
                    "type": "string",
                    "description": "error message\n"
                  }
                }
              }
            },
            "description": "Successful response with most recent errors\n",
            "examples": {
              "application/json": [
                {
                  "queryId": "AB123",
                  "timestamp": "2018-12-31 15:09:24.614",
                  "beacon": 2,
                  "query": "https://wikidata.ncats.io/concepts?keywords=WRN",
                  "message": "Bad Gateway"
                }
              ]
            }
          }
        }
      }
    },
    "/concepts": {
      "post": {
        "description": "Posts the query parameters to retrieves a (paged) list of \nconcepts from the system\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "description": "a (urlencoded) space delimited set of keywords or substrings against which to match concept names and synonyms, e.g. diabetes.",
            "required": true,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "description": "a subset array of concept types (specified as codes gene, pathway, etc.) to which to constrain concepts matched by the main keyword search (see [Biolink Model](https://biolink.github.io/biolink-model) for the full list of codes)\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "subset of aggregator indices of beacons to be used as knowledge sources for the query (if omitted, then the all beacons are queried)\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "postConceptsQuery",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconConceptsQuery",
              "type": "object",
              "properties": {
                "queryId": {
                  "type": "string",
                  "description": "session identifier of initiated query\n"
                },
                "keywords": {
                  "type": "string",
                  "description": "'keywords' string parameter to call, echoed back\n"
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "'types' string parameter to call, echoed back\n"
                }
              }
            },
            "description": "Successful concept query initialization, with initial query status returned\n",
            "examples": {
              "application/json": {
                "queryId": "AB123",
                "keywords": "WRN",
                "type": "gene chem disease"
              }
            }
          }
        }
      }
    },
    "/concepts/status/{queryId}": {
      "get": {
        "description": "Retrieves the status of a given query about the concepts in the system\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "description": "an active query identifier as returned by a POST of concept query parameters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "subset of aggregator indices of beacons whose status is being polled (if omitted, then the status of all beacons from the query are returned)\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getConceptsQueryStatus",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconConceptsQueryStatus",
              "type": "object",
              "properties": {
                "queryId": {
                  "type": "string",
                  "description": "session identifier of a query previously initiated by /concepts\n"
                },
                "status": {
                  "type": "array",
                  "description": "array of beacon-specific query status reports\n",
                  "items": {
                    "title": "BeaconConceptsQueryBeaconStatus",
                    "type": "object",
                    "properties": {
                      "beacon": {
                        "type": "integer",
                        "description": "Index number of beacon providing these concept details\n"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Http code status of beacon API - 200 means 'data ready', 102 means 'query in progress', other codes (e.g. 500) are server errors. Once a beacon has a '200' success code, then the /concepts/data  endpoint may be used to retrieve it.\n"
                      },
                      "count": {
                        "type": "integer",
                        "description": "When a 200 status code is returned, this integer designates  the number of concepts matched by the query for the given beacon.\n"
                      }
                    }
                  }
                }
              }
            },
            "description": "Current query status returned\n",
            "examples": {
              "application/json": {
                "queryId": "AB123",
                "keywords": "WRN",
                "type": "gene chem disease",
                "status": [
                  {
                    "beacon": 1,
                    "status": 200,
                    "count": 3
                  },
                  {
                    "beacon": 2,
                    "status": 500,
                    "count": null
                  },
                  {
                    "beacon": 5,
                    "status": 102,
                    "count": null
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/concepts/data/{queryId}": {
      "get": {
        "description": "Retrieves a (paged) simple list of concepts from beacons with status\n'data ready' from a previously /concepts posted query parameter submission\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "description": "the query identifier of a concepts query previously posted by the /concepts endpoint",
            "required": true,
            "type": "string"
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons whose data are to be retrieved\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "(1-based) number of the page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "number of concepts per page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          }
        ],
        "operationId": "getConcepts",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconConceptsQueryResult",
              "type": "object",
              "properties": {
                "queryId": {
                  "type": "string",
                  "description": "session identifier of the query returning the results\n"
                },
                "beacons": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "description": "subset of aggregator indices of beacons whose concepts  are to be retrieved\n"
                  }
                },
                "pageNumber": {
                  "type": "integer",
                  "description": "session identifier of the query returning the results\n"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "session identifier of the query returning the results\n"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "title": "BeaconConcept",
                    "type": "object",
                    "properties": {
                      "clique": {
                        "type": "string",
                        "description": "CURIE identifying the inferred equivalent concept clique to which the concept belongs. This is assigned by an identifier precedence heuristic by the beacon-aggregator\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "Canonical human readable name of the concept\n"
                      },
                      "type": {
                        "type": "string",
                        "description": "Concept semantic type as a CURIE into a data type ontology\n"
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with concept list returned\n",
            "examples": {
              "application/json": {
                "queryId": "AB123",
                "beacons": [
                  1
                ],
                "pageNumber": 1,
                "pageSize": 4,
                "results": [
                  {
                    "clique": "UNIPROT:Q14191",
                    "name": "WRN protein, human",
                    "type": "UMLSSG:CHEM"
                  },
                  {
                    "clique": "NCBIGENE:56897",
                    "name": "WRNIP1",
                    "type": "UMLSSG:GENE"
                  },
                  {
                    "clique": "NCBIGENE:7486",
                    "name": "WRN",
                    "type": "UMLSSG:GENE"
                  },
                  {
                    "clique": "DOID:5686",
                    "name": "Werner Syndrome",
                    "type": "UMLSSG:DISO"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/clique/{identifier}": {
      "get": {
        "description": "Retrieves the beacon aggregator assigned clique of equivalent concepts that includes the specified (url-encoded) CURIE identifier. Note that the clique to which a given concept CURIE belongs may change over time as the aggregator progressively discovers the members of the clique.\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "a [CURIE-encoded](https://www.w3.org/TR/curie/) identifier of interest to be resolved to a concept clique",
            "required": true,
            "type": "string"
          }
        ],
        "operationId": "getClique",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconCliqueIdentifier",
              "type": "object",
              "properties": {
                "cliqueId": {
                  "type": "string",
                  "description": "CURIE identifying the equivalent concept clique to which the  input concept CURIE belongs.\n"
                }
              }
            },
            "description": "Successful response with clique identifier returned\n",
            "examples": {
              "application/json": {
                "cliqueId": "NCBIGENE:2176"
              }
            }
          }
        }
      }
    },
    "/concepts/details/{cliqueId}": {
      "get": {
        "description": "Retrieves details for a specified clique of equivalent concepts in the system,  as specified by a (url-encoded) CURIE identifier of a clique known to the aggregator\n",
        "tags": [
          "concepts"
        ],
        "parameters": [
          {
            "name": "cliqueId",
            "in": "path",
            "description": "a [CURIE-encoded](https://www.w3.org/TR/curie/) identifier, as returned  by any other endpoint of the beacon aggregator API, of an exactly matching  concept clique of interest.",
            "required": true,
            "type": "string"
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons to be used as knowledge sources for the query\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getConceptDetails",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconConceptWithDetails",
              "type": "object",
              "description": "A single record of a given concept clique with details\n",
              "properties": {
                "clique": {
                  "type": "string",
                  "description": "CURIE identifying the equivalent concept clique to which the concept belongs.\n"
                },
                "name": {
                  "type": "string",
                  "description": "Canonical human readable name of the key concept of the clique\n"
                },
                "type": {
                  "type": "string",
                  "description": "Concept semantic type as a CURIE into a data type ontology\n"
                },
                "aliases": {
                  "type": "array",
                  "description": "set of alias CURIES in the equivalent concept clique of the concept\n",
                  "items": {
                    "type": "string"
                  }
                },
                "entries": {
                  "type": "array",
                  "description": "List of details specifically harvested from beacons, indexed by beacon\n",
                  "items": {
                    "title": "BeaconConceptWithDetailsBeaconEntry",
                    "type": "object",
                    "properties": {
                      "beacon": {
                        "type": "integer",
                        "description": "Index number of beacon providing these concept details\n"
                      },
                      "id": {
                        "type": "string",
                        "description": "CURIE identifying the specific beacon source concept being described.\n"
                      },
                      "synonyms": {
                        "type": "array",
                        "description": "List of synonymous names or identifiers for the concept\n",
                        "items": {
                          "type": "string"
                        }
                      },
                      "definition": {
                        "type": "string",
                        "description": "Concept definition provided by a given beacon\n"
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "title": "BeaconConceptDetail",
                          "type": "object",
                          "description": "Additional attributes associated with a concept\n",
                          "properties": {
                            "tag": {
                              "type": "string",
                              "description": "Attribute name\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Attribute value\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful response with details of a clique concept returned\n",
            "examples": {
              "application/json": {
                "clique": "wd:Q14883734",
                "name": "Werner Syndrome",
                "type": "UMLSSG:DISO",
                "aliases": [
                  "wd:Q14883734",
                  "OMIM:277700"
                ],
                "entries": [
                  {
                    "beacon": 3,
                    "id": "OMIM:277700",
                    "synonyms": [
                      "Werner Syndrome",
                      "Pangeria",
                      "Syndrome, Werner",
                      "Progeria, Adult",
                      "Werner Syndrome [Disease/Finding]",
                      "Werner syndrome (disorder)",
                      "adult progeria",
                      "Werner",
                      "syndromes werner",
                      "Syndrome, Werner\\'s",
                      "WRN",
                      "Werner\\'s syndrome",
                      "adults progeria",
                      "Werner syndrome (adult progeria) (diagnosis)",
                      "Werner syndrome (adult progeria)",
                      "Syndrome, Werners",
                      "Adult premature aging syndrome",
                      "syndromes werner\\'s",
                      "Werners Syndrome",
                      "syndrome werner",
                      "Progeria of the adult",
                      "WS",
                      "syndromes werners",
                      "Adult premature ageing syndrome"
                    ],
                    "definition": "autosomal recessive disorder that causes premature aging in adults, characterized by sclerodermal skin changes, cataracts, subcutaneous calcifications, muscular atrophy, a tendency to diabetes mellitus, aged appearance of the face, baldness, and a high incidence of neoplastic disease.",
                    "details": [
                      {
                        "tag": "Symptom",
                        "value": "Premature greying of hair"
                      },
                      {
                        "tag": "Symptom",
                        "value": "Muscular atrophy"
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/statements": {
      "post": {
        "description": "Posts a query to retrieve concept-relations where either the subject or object concept matches a [CURIE-encoded 'source'](https://www.w3.org/TR/curie/) clique identifier designating a set of exactly matching concepts. A 'target' clique identifier may optionally be given, in which case the 'target' clique identifier should match the concept clique opposing the 'source', that is, if the 'source' matches a subject, then the  'target' should match the object of a given statement (or vice versa).\n",
        "tags": [
          "statements"
        ],
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "description": "a [CURIE-encoded](https://www.w3.org/TR/curie/) identifier of the  exactly matching 'source' clique, as defined by other endpoints of the beacon aggregator API. \n",
            "required": true,
            "type": "string"
          },
          {
            "name": "relations",
            "in": "query",
            "description": "a subset (array) of identifiers of predicate relation identifiers with which to constrain the statement relations retrieved  for the given query seed concept. The predicate ids sent should  be as published by the beacon-aggregator by the /predicates API endpoint.\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "a [CURIE-encoded](https://www.w3.org/TR/curie/) identifier of the  exactly matching 'target' clique, as defined by other endpoints of the beacon aggregator API. \n",
            "required": false,
            "type": "string"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "a (url-encoded, space-delimited) string of keywords or substrings against which to match the 'target' concept or 'predicate' names of the set of concept-relations matched by the 'source' concepts.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "types",
            "in": "query",
            "description": "a subset (array) of identifiers of concept types to which to constrain 'target' concepts associated with the given 'source' concept ((see [Biolink Model](https://biolink.github.io/biolink-model) for the full list of codes).\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons to be used as knowledge sources for the query\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "postStatementsQuery",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconStatementsQuery",
              "type": "object",
              "properties": {
                "queryId": {
                  "type": "string",
                  "description": "session identifier of initiated query\n"
                },
                "source": {
                  "type": "string",
                  "description": "'source' string parameter to call, echoed back\n"
                },
                "relations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "'relations' string parameter to call, echoed back\n"
                },
                "target": {
                  "type": "string",
                  "description": "'target' string parameter to call, echoed back\n"
                },
                "keywords": {
                  "type": "string",
                  "description": "'keywords' string parameter to call, echoed back\n"
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "'types' string parameter to call, echoed back\n"
                }
              }
            },
            "description": "Successful concept query initialization, with initial query status returned\n",
            "examples": {
              "application/json": {
                "queryId": "XY456",
                "source": "NCBIGENE:7486",
                "relations": "SIO:000983",
                "target": "",
                "keywords": "",
                "type": "disease"
              }
            }
          }
        }
      }
    },
    "/statements/status/{queryId}": {
      "get": {
        "description": "Retrieves the status of a given query about the statements in the system\n",
        "tags": [
          "statements"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "description": "an active query identifier as returned by a POST of statements  query parameters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "subset of aggregator indices of beacons whose status is being polled (if omitted, then the status of all beacons from the query are returned)\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getStatementsQueryStatus",
        "responses": {
          "200": {
            "schema": {
              "title": "BeaconStatementsQueryStatus",
              "type": "object",
              "properties": {
                "queryId": {
                  "type": "string",
                  "description": "session identifier of initiated query\n"
                },
                "status": {
                  "type": "array",
                  "description": "array of beacon-specific query status reports\n",
                  "items": {
                    "title": "BeaconStatementsQueryBeaconStatus",
                    "type": "object",
                    "properties": {
                      "beacon": {
                        "type": "integer",
                        "description": "Index number of beacon providing these statements\n"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Http code status of beacon API - 200 means 'data ready',  102 means 'query in progress', other codes (e.g. 500) are  server errors. Once a beacon has a '200' success code,  then the /statements/data endpoint may be used to retrieve it.\n"
                      },
                      "count": {
                        "type": "integer",
                        "description": "When a 200 status code is returned, this integer designates  the number of statements matched by the query for the  given beacon.\n"
                      }
                    }
                  }
                }
              }
            },
            "description": "Successful concept query initialization, with initial query status returned\n",
            "examples": {
              "application/json": {
                "queryId": "XY456",
                "status": [
                  {
                    "beacon": 1,
                    "status": 200,
                    "count": 25
                  },
                  {
                    "beacon": 2,
                    "status": 500,
                    "count": null
                  },
                  {
                    "beacon": 5,
                    "status": 102,
                    "count": null
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/statements/data/{queryId}": {
      "get": {
        "description": "Given a specification [CURIE-encoded](https://www.w3.org/TR/curie/) a 'source' clique identifier for a set of exactly matching concepts,  retrieves a paged list of concept-relations where either the subject or object concept matches the 'source' clique identifier.  Optionally, a 'target' clique identifier may also be given, in which case the 'target' clique identifier should match the concept clique opposing the 'source', that is, if the 'source' matches a subject, then the  'target' should match the object of a given statement (or vice versa).\n",
        "tags": [
          "statements"
        ],
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "description": "an active query identifier as returned by a POST of statement query parameters.",
            "required": true,
            "type": "string"
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "subset of aggregator indices of beacons whose statements are to be retrieved\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "(1-based) number of the page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "number of concepts per page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          }
        ],
        "operationId": "getStatementsQuery",
        "responses": {
          "200": {
            "description": "Successful response returns a list of concept-relations where there is an exact match of an input concept identifier either to the subject or object concepts of the statement\n",
            "schema": {
              "title": "BeaconStatementsQueryResult",
              "type": "object",
              "properties": {
                "queryId": {
                  "type": "string",
                  "description": "session identifier of the query returning the results\n"
                },
                "beacons": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "description": "set of aggregator indices of beacons whose data were retrieved\n"
                  }
                },
                "pageNumber": {
                  "type": "integer",
                  "description": "session identifier of the query returning the results\n"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "session identifier of the query returning the results\n"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "title": "BeaconStatement",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "CURIE-encoded identifier for statement (can be used to retrieve associated evidence)"
                      },
                      "subject": {
                        "title": "BeaconStatementSubject",
                        "type": "object",
                        "properties": {
                          "clique": {
                            "type": "string",
                            "description": "CURIE-encoded canonical identifier of \"equivalent concepts clique\"\n"
                          },
                          "id": {
                            "type": "string",
                            "description": "CURIE-encoded identifier of concept\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "human readable label of subject concept"
                          },
                          "type": {
                            "type": "string",
                            "description": "a semantic group for the subject concept (specified  as a CURIE of a Translator data type ontology term)\n"
                          }
                        }
                      },
                      "predicate": {
                        "title": "BeaconStatementPredicate",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "CURIE-encoded identifier of predicate resource\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "human readable label of concept"
                          }
                        }
                      },
                      "object": {
                        "title": "BeaconStatementObject",
                        "type": "object",
                        "properties": {
                          "clique": {
                            "type": "string",
                            "description": "CURIE-encoded canonical identifier of \"equivalent concepts clique\"\n"
                          },
                          "id": {
                            "type": "string",
                            "description": "CURIE-encoded identifier of object concept\n"
                          },
                          "name": {
                            "type": "string",
                            "description": "human readable label of object concept"
                          },
                          "type": {
                            "type": "string",
                            "description": "a semantic group for the object concept (specified  as a CURIE of a Translator data type ontology term)\n"
                          }
                        }
                      },
                      "beacon": {
                        "type": "integer",
                        "description": "aggregator assigned beacon index number\n"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "queryId": "XYZ456",
                "beacons": [
                  1
                ],
                "pageNumber": 1,
                "pageSize": 1,
                "results": [
                  {
                    "source": "semmeddb",
                    "id": "kb:12345",
                    "subject": {
                      "id": [
                        "wd:Q14912054"
                      ],
                      "name": "KCNJ11",
                      "type": "UMLSSG:GENE"
                    },
                    "predicate": {
                      "id": [
                        "kbp:10"
                      ],
                      "name": "Causes"
                    },
                    "object": {
                      "id": [
                        "wd:Q2898645"
                      ],
                      "name": "Neonatal diabetes mellitus",
                      "type": "UMLSSG:DISO"
                    },
                    "beacon": "1"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/evidence/{statementId}": {
      "get": {
        "description": "Retrieves a (paged) list of annotations cited as evidence for a specified concept-relationship statement\n",
        "tags": [
          "statements"
        ],
        "parameters": [
          {
            "name": "statementId",
            "in": "path",
            "description": "(url-encoded) CURIE identifier of the concept-relationship statement (\"assertion\", \"claim\") for which associated evidence is sought, e.g. kbs:Q420626_P2175_Q126691\n",
            "required": true,
            "type": "string"
          },
          {
            "name": "keywords",
            "in": "query",
            "description": "(url-encoded, space delimited) keyword filter to apply against the label field of the annotation\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "(1-based) number of the page to be returned in a paged set of query\nresults\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "number of cited references per page to be returned in a paged set of query results\n",
            "required": false,
            "type": "integer"
          },
          {
            "name": "beacons",
            "in": "query",
            "description": "set of aggregator indices of beacons to be used as knowledge sources for the query\n",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "operationId": "getEvidence",
        "responses": {
          "200": {
            "description": "successful call returns a list of annotation with metadata\n",
            "schema": {
              "type": "array",
              "items": {
                "title": "BeaconAnnotation",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "CURIE-encoded identifier to an associated external resources (e.g. PMID of a pubmed citation)\n"
                  },
                  "label": {
                    "type": "string",
                    "description": "canonical human readable and searchable label of the annotation (i.e. comment, matched sentence, etc.)\n"
                  },
                  "type": {
                    "type": "string",
                    "description": "Gene Ontology Evidence Code (http://www.geneontology.org/page/guide-go-evidence-codes)\n"
                  },
                  "date": {
                    "type": "string",
                    "description": "publication date of annotation (generally of format 'yyyy-mm-dd')\n"
                  },
                  "beacon": {
                    "type": "integer",
                    "description": "aggregator assigned beacon index identifier\n"
                  }
                }
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "pmid:22781086",
                  "label": "Neonatal diabetes mellitus and congenital diaphragmatic hernia coincidence or concurrent etiology?",
                  "type": "TAS",
                  "date": "2012-07-10T00:00:00.000Z",
                  "beacon": 1
                }
              ]
            }
          }
        }
      }
    }
  }
}