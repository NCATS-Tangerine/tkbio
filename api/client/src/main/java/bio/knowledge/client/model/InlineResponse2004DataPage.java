/*
 * Translator Knowledge Beacon API
 * This is the Translator Knowledge Beacon web service application programming interface (API).  This OpenAPI (\"Swagger\") document may be used as the input specification into a tool like [Swagger-Codegen](https://github.com/swagger-api/swagger-codegen/blob/master/README.md) to generate client and server code stubs implementing the API, in any one of several supported computer languages and frameworks. In order to customize usage to your web site, you should change the 'host' directive below to your hostname.  Note that where the term 'local' is used below to describe an identifier or other resource, it is referring to the specific Knowledge Source (KS) upon which the Knowledge Beacon API is hosted. 
 *
 * OpenAPI spec version: 4.0.6
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * InlineResponse2004DataPage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-04-27T09:44:03.540-07:00")
public class InlineResponse2004DataPage {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("publicationDate")
  private String publicationDate = null;

  public InlineResponse2004DataPage id(String id) {
    this.id = id;
    return this;
  }

   /**
   * CURIE-encoded identifier for the cited reference 
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "CURIE-encoded identifier for the cited reference ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse2004DataPage name(String name) {
    this.name = name;
    return this;
  }

   /**
   * canonical human readable title of the cited reference 
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "canonical human readable title of the cited reference ")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InlineResponse2004DataPage publicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
    return this;
  }

   /**
   * publication date of reference (yyyy-mm-dd) 
   * @return publicationDate
  **/
  @ApiModelProperty(example = "null", value = "publication date of reference (yyyy-mm-dd) ")
  public String getPublicationDate() {
    return publicationDate;
  }

  public void setPublicationDate(String publicationDate) {
    this.publicationDate = publicationDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2004DataPage inlineResponse2004DataPage = (InlineResponse2004DataPage) o;
    return Objects.equals(this.id, inlineResponse2004DataPage.id) &&
        Objects.equals(this.name, inlineResponse2004DataPage.name) &&
        Objects.equals(this.publicationDate, inlineResponse2004DataPage.publicationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, publicationDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2004DataPage {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    publicationDate: ").append(toIndentedString(publicationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

