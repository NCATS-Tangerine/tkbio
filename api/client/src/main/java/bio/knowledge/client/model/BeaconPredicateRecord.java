/*
 * Translator Knowledge Beacon Aggregator API
 * This is the Translator Knowledge Beacon Aggregator web service application programming interface (API) that provides integrated access to a pool of knowledge sources publishing concepts and relations through the Translator Knowledge Beacon API. This API is similar to that of the latter mentioned API with the addition of some extra informative endpoints plus session identifier and beacon indices. These latter identifiers are locally assigned numeric indices provided to track the use of specific registered beacons within the aggregator API itself. 
 *
 * OpenAPI spec version: 1.0.6
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * BeaconPredicateRecord
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-06T00:37:22.296-08:00")
public class BeaconPredicateRecord {
  @SerializedName("beacon")
  private String beacon = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("definition")
  private String definition = null;

  public BeaconPredicateRecord beacon(String beacon) {
    this.beacon = beacon;
    return this;
  }

   /**
   * aggregator index of the given beacon 
   * @return beacon
  **/
  @ApiModelProperty(example = "null", value = "aggregator index of the given beacon ")
  public String getBeacon() {
    return beacon;
  }

  public void setBeacon(String beacon) {
    this.beacon = beacon;
  }

  public BeaconPredicateRecord id(String id) {
    this.id = id;
    return this;
  }

   /**
   * unique CURIE-encoded identifier of predicate aggregator indices of beacons in the given beacon 
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "unique CURIE-encoded identifier of predicate aggregator indices of beacons in the given beacon ")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public BeaconPredicateRecord definition(String definition) {
    this.definition = definition;
    return this;
  }

   /**
   * human readable definition assigned by the beacon for the predicate relation 
   * @return definition
  **/
  @ApiModelProperty(example = "null", value = "human readable definition assigned by the beacon for the predicate relation ")
  public String getDefinition() {
    return definition;
  }

  public void setDefinition(String definition) {
    this.definition = definition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BeaconPredicateRecord beaconPredicateRecord = (BeaconPredicateRecord) o;
    return Objects.equals(this.beacon, beaconPredicateRecord.beacon) &&
        Objects.equals(this.id, beaconPredicateRecord.id) &&
        Objects.equals(this.definition, beaconPredicateRecord.definition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beacon, id, definition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BeaconPredicateRecord {\n");
    
    sb.append("    beacon: ").append(toIndentedString(beacon)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

