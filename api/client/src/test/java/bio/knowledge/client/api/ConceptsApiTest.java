/*
 * Translator Knowledge.Bio API
 * Documentation of the Translator Knowledge.Bio (TKBio) knowledge sources query web service application programming interfaces. Learn more about [TKBio](https://github.com/STARInformatics/tkbio) 
 *
 * OpenAPI spec version: 4.0.4
 * Contact: richard@starinformatics.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package bio.knowledge.client.api;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.util.List;

import org.junit.Ignore;
import org.junit.Test;

import bio.knowledge.client.ApiException;
import bio.knowledge.client.model.InlineResponse200;
import bio.knowledge.client.model.InlineResponse2001;

/**
 * API tests for ConceptsApi
 */
@Ignore
public class ConceptsApiTest extends RootTest {
        
	private final static ConceptsApi api = new ConceptsApi();
    static {
	    api.setApiClient(apiClient);
    }

    
    /**
     * 
     *
     * Retrieves details for a specified concepts in the system 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConceptDetailsTest() throws ApiException {
        String conceptId = "3";
        List<InlineResponse200> responses = api.getConceptDetails(conceptId);
        
        assertTrue(responses != null);
        
        for (InlineResponse200 response : responses) {
        	assertTrue(response.getName().equals("INSL3"));
        }
    }
    
    /**
     * 
     *
     * Retrieves a (paged) list of concepts in the system 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConceptsTest() throws ApiException {
        String q = "chocolate milk";
        String sg = "GENE OBJC";
        Integer pageNumber = 0;
        Integer pageSize = 20;
        List<InlineResponse2001> responses = api.getConcepts(q, sg, pageNumber, pageSize);

        boolean coconutMilkFound = false;
        int count = 0;
        for (InlineResponse2001 response : responses) {
        	count += 1;
        	if (response.getName().equals("Coconut milk")) {
        		coconutMilkFound = true;
        	}
        }
        
        assertEquals(count,13);
        assertTrue(coconutMilkFound);
    }
    
}
